plugins {
    // https://github.com/sherter/google-java-format-gradle-plugin
    id "com.github.sherter.google-java-format" version "0.6"

    // https://github.com/tbroyer/gradle-errorprone-plugin
    id "net.ltgt.errorprone" version "0.0.13"

    // http://spotbugs.readthedocs.io/en/latest/gradle.html
    id "com.github.spotbugs" version "1.6.0"

    id "net.researchgate.release" version "2.6.0"
    id "com.jfrog.bintray" version "1.8.0"
    id "com.sourcemuse.mongo" version "1.0.5"
    id "java"
    id "idea"
    id "groovy"
    id "maven"
    id "maven-publish"
}

sourceCompatibility = targetCompatibility = 1.8

googleJavaFormat {
    toolVersion = '1.5'
}

dependencies {
    errorprone "com.google.errorprone:error_prone_core:${errorProneVersion}"

    compile("org.quartz-scheduler:quartz:2.2.3")
    compile("org.mongodb:mongodb-driver:3.6.1")
    compile("org.slf4j:slf4j-api:1.7.25")

    testCompile("org.slf4j:slf4j-simple:1.7.25")
    testCompile("org.codehaus.groovy:groovy-all:2.4.1")
    testCompile("org.spockframework:spock-core:1.0-groovy-2.4")
    testRuntime("cglib:cglib-nodep:3.2.6")
    testRuntime("org.objenesis:objenesis:2.5.1")
}

spotbugs {
    // https://github.com/spotbugs/spotbugs/releases/latest
    toolVersion = spotBugsVersion
    ignoreFailures = false
}
// To generate an HTML report instead of XML
import com.github.spotbugs.SpotBugsTask

tasks.withType(SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    runWithMongoDb = true
}

mongo {
    journalingEnabled true
    port 12345
    mongoVersion "3.6.2"
}

jar {
    baseName = "quartz-mongodb-core"
    version = version
}

release {
    scmAdapters = [net.researchgate.release.GitAdapter]
}

task sourceJar(type: Jar) {
    dependsOn classes
    classifier "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives sourceJar
}

publishing {
    publications {
        QuartzMongoDB(MavenPublication) {
            from components.java
            groupId "org.lazystone"
            artifactId(jar.baseName)
            version(projectVersion)

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = BINTRAY_USERNAME
    key = BINTRAY_API_KEY
    publications = ["QuartzMongoDB"]
    pkg {
        repo = "maven"
        name = "quartz-mongodb-core"
        labels = ["quartz", "mongodb"]
        userOrg = "lazystone"
        licenses = ["Apache-2.0"]
        vcsUrl = "https://github.com/lazystone/quartz-mongodb.git"

        version {
            name = projectVersion
            desc = "MongoDB-backed job store for the Quartz scheduler"
            vcsTag = projectVersion
        }
    }
}
